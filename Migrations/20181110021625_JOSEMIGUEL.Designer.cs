// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace PROYECTO_VISION_USMP.Migrations
{
    [DbContext(typeof(MvcContext))]
    [Migration("20181110021625_JOSEMIGUEL")]
    partial class JOSEMIGUEL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.Alumno", b =>
                {
                    b.Property<string>("DNI")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApeMat")
                        .IsRequired();

                    b.Property<string>("ApePat")
                        .IsRequired();

                    b.Property<int>("Celular");

                    b.Property<string>("CorreoAlum")
                        .IsRequired();

                    b.Property<DateTime>("FechaNac");

                    b.Property<string>("IDCarrera");

                    b.Property<string>("NomAlumno")
                        .IsRequired();

                    b.HasKey("DNI");

                    b.HasIndex("IDCarrera");

                    b.ToTable("Alumno");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.Aula", b =>
                {
                    b.Property<string>("IDAula")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DescAula")
                        .IsRequired();

                    b.HasKey("IDAula");

                    b.ToTable("Aula");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.Carrera", b =>
                {
                    b.Property<string>("IDCarrera")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomCarrera")
                        .IsRequired();

                    b.HasKey("IDCarrera");

                    b.ToTable("Carrera");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.Conferencia", b =>
                {
                    b.Property<string>("IDConferencia")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Fecha")
                        .IsRequired();

                    b.Property<DateTime>("HoraFin");

                    b.Property<DateTime>("HoraIni");

                    b.Property<string>("IDAula");

                    b.Property<string>("IDCarrera");

                    b.Property<string>("IDEvento");

                    b.Property<string>("IDPabellon");

                    b.Property<string>("NomConferencia")
                        .IsRequired();

                    b.HasKey("IDConferencia");

                    b.HasIndex("IDAula");

                    b.HasIndex("IDCarrera");

                    b.HasIndex("IDEvento");

                    b.HasIndex("IDPabellon");

                    b.ToTable("Conferencia");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.Empresa", b =>
                {
                    b.Property<string>("IDEmpresa")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CorreoEmpresa")
                        .IsRequired();

                    b.Property<string>("NomEmpresa")
                        .IsRequired();

                    b.Property<string>("Pais")
                        .IsRequired();

                    b.Property<int>("Telefono");

                    b.HasKey("IDEmpresa");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.Evento", b =>
                {
                    b.Property<string>("IDEvento")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Fecha_Fin")
                        .IsRequired();

                    b.Property<string>("Fecha_Ini")
                        .IsRequired();

                    b.Property<string>("TemaEvento")
                        .IsRequired();

                    b.HasKey("IDEvento");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.Expositor", b =>
                {
                    b.Property<string>("IDExpositor")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApeMat")
                        .IsRequired();

                    b.Property<string>("ApePat")
                        .IsRequired();

                    b.Property<string>("CorreoExp")
                        .IsRequired();

                    b.Property<string>("IDEmpresa");

                    b.Property<string>("Nacionalidad")
                        .IsRequired();

                    b.Property<string>("NomExp")
                        .IsRequired();

                    b.Property<int>("Orden")
                        .HasMaxLength(1);

                    b.Property<string>("TipoOrador")
                        .IsRequired();

                    b.HasKey("IDExpositor");

                    b.HasIndex("IDEmpresa");

                    b.ToTable("Expositor");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.ExpTipDoc", b =>
                {
                    b.Property<string>("IDTip");

                    b.Property<string>("IDExpositor");

                    b.Property<int>("Número")
                        .HasMaxLength(12);

                    b.HasKey("IDTip", "IDExpositor");

                    b.HasIndex("IDExpositor");

                    b.ToTable("ExpTipDoc");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.PabAula", b =>
                {
                    b.Property<string>("IDPabellon");

                    b.Property<string>("IDAula");

                    b.Property<int>("Capacidad");

                    b.Property<int>("Piso")
                        .HasMaxLength(1);

                    b.HasKey("IDPabellon", "IDAula");

                    b.HasIndex("IDAula");

                    b.ToTable("PabAula");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.Pabellon", b =>
                {
                    b.Property<string>("IDPabellon")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomPab")
                        .IsRequired();

                    b.HasKey("IDPabellon");

                    b.ToTable("Pabellon");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.RequisitosConferencia", b =>
                {
                    b.Property<string>("IDExpositor");

                    b.Property<string>("IDConferencia");

                    b.Property<string>("DescReqConf")
                        .IsRequired();

                    b.HasKey("IDExpositor", "IDConferencia");

                    b.HasIndex("IDConferencia");

                    b.ToTable("RequisitosConferencia");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.RequisitosTaller", b =>
                {
                    b.Property<string>("IDExpositor");

                    b.Property<string>("IDTaller");

                    b.Property<string>("DescReqTal")
                        .IsRequired();

                    b.HasKey("IDExpositor", "IDTaller");

                    b.HasIndex("IDTaller");

                    b.ToTable("RequisitosTaller");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.Taller", b =>
                {
                    b.Property<string>("IDTaller")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Fecha")
                        .IsRequired();

                    b.Property<DateTime>("HoraFin");

                    b.Property<DateTime>("HoraIni");

                    b.Property<string>("IDAula");

                    b.Property<string>("IDCarrera");

                    b.Property<string>("IDEvento");

                    b.Property<string>("IDPabellon");

                    b.Property<string>("NomTaller")
                        .IsRequired();

                    b.HasKey("IDTaller");

                    b.HasIndex("IDAula");

                    b.HasIndex("IDCarrera");

                    b.HasIndex("IDEvento");

                    b.HasIndex("IDPabellon");

                    b.ToTable("Taller");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.TipoDocumento", b =>
                {
                    b.Property<string>("IDTip")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DescTip")
                        .IsRequired();

                    b.HasKey("IDTip");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.Alumno", b =>
                {
                    b.HasOne("PROYECTO_VISION_USMP.Models.Carrera", "CodigoCarrera")
                        .WithMany("Alumnos")
                        .HasForeignKey("IDCarrera");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.Conferencia", b =>
                {
                    b.HasOne("PROYECTO_VISION_USMP.Models.Aula", "CodigoAula")
                        .WithMany()
                        .HasForeignKey("IDAula");

                    b.HasOne("PROYECTO_VISION_USMP.Models.Carrera", "CodigoCarrera")
                        .WithMany("Conferencias")
                        .HasForeignKey("IDCarrera");

                    b.HasOne("PROYECTO_VISION_USMP.Models.Evento", "CodigoEvento")
                        .WithMany("Conferencias")
                        .HasForeignKey("IDEvento");

                    b.HasOne("PROYECTO_VISION_USMP.Models.Pabellon", "CodigoPabellon")
                        .WithMany("Conferencias")
                        .HasForeignKey("IDPabellon");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.Expositor", b =>
                {
                    b.HasOne("PROYECTO_VISION_USMP.Models.Empresa", "CodigoEmpresa")
                        .WithMany("Expositores")
                        .HasForeignKey("IDEmpresa");
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.ExpTipDoc", b =>
                {
                    b.HasOne("PROYECTO_VISION_USMP.Models.Expositor", "CodigoExpositor")
                        .WithMany()
                        .HasForeignKey("IDExpositor")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PROYECTO_VISION_USMP.Models.TipoDocumento", "CodigoTipoDocumento")
                        .WithMany()
                        .HasForeignKey("IDTip")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.PabAula", b =>
                {
                    b.HasOne("PROYECTO_VISION_USMP.Models.Aula", "CodigoAula")
                        .WithMany()
                        .HasForeignKey("IDAula")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PROYECTO_VISION_USMP.Models.Pabellon", "CodigoPabellon")
                        .WithMany()
                        .HasForeignKey("IDPabellon")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.RequisitosConferencia", b =>
                {
                    b.HasOne("PROYECTO_VISION_USMP.Models.Conferencia", "CodigoConferencia")
                        .WithMany()
                        .HasForeignKey("IDConferencia")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PROYECTO_VISION_USMP.Models.Expositor", "CodigoExpositor")
                        .WithMany()
                        .HasForeignKey("IDExpositor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.RequisitosTaller", b =>
                {
                    b.HasOne("PROYECTO_VISION_USMP.Models.Expositor", "CodigoExpositor")
                        .WithMany()
                        .HasForeignKey("IDExpositor")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PROYECTO_VISION_USMP.Models.Taller", "CodigoTaller")
                        .WithMany()
                        .HasForeignKey("IDTaller")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PROYECTO_VISION_USMP.Models.Taller", b =>
                {
                    b.HasOne("PROYECTO_VISION_USMP.Models.Aula", "CodigoAula")
                        .WithMany("Talleres")
                        .HasForeignKey("IDAula");

                    b.HasOne("PROYECTO_VISION_USMP.Models.Carrera", "CodigoCarrera")
                        .WithMany("Talleres")
                        .HasForeignKey("IDCarrera");

                    b.HasOne("PROYECTO_VISION_USMP.Models.Evento", "CodigoEvento")
                        .WithMany("Tallers")
                        .HasForeignKey("IDEvento");

                    b.HasOne("PROYECTO_VISION_USMP.Models.Pabellon", "CodigoPabellon")
                        .WithMany("Talleres")
                        .HasForeignKey("IDPabellon");
                });
#pragma warning restore 612, 618
        }
    }
}
